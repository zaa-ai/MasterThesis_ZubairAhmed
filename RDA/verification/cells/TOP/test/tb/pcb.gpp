
**------------------------------------------------
** Supply and References
**------------------------------------------------

`bond_au(name=rbond_vsup o=vsup_pcb i=vsup_p)
`bond_au(name=rbond_vcc  o=vcc_pcb  i=vcc_p)
`bond_au(name=rbond_vdd  o=vdd_pcb  i=vdd_p)
`bond_au(name=rbond_vio  o=vio_pcb  i=vio_p)
`bond_au(name=rbond_cldo o=cldo_pcb i=cldo_p)

**---------

`c(name=cldo_e p=cldo_pcb c=22`u)
`c(name=cldo_c p=cldo_pcb c=1`u  rs=10`m)
`c(name=cvcc   p=vcc_pcb  c=100`n)
`c(name=cvdd   p=vdd_pcb  c=330`n)

**---------

`if simcase[63]
  `emc_meas(p=vsup_pcb meas=vsup_emcmeas)
`endif

**------------------------------------------------
** DSI3 Interface
**------------------------------------------------

define dut_dsi_master(__ch__=0)

  `r(name=rdsi__ch___master p=dsi__ch___master_conn n=dsi__ch___pcb r=rbus)
  `c(name=cdsi__ch___master p=dsi__ch___master_conn                 c=cbus  cfg=1)

  `if simcase[63]
    `emc_meas(p=dsi__ch___master_conn meas=dsi__ch___emcmeas)
  `endif
  
  `if simcase[62:61]
    `vdpi(name=vdpi_dsi__ch__ p=dsi__ch___master_conn)
  `endif
    
  `vcvs(name=vdsi__ch___flt p=dsi__ch___pcb_meantmp cp=dsi__ch___pcb)
  `r(   name=rdsi__ch___flt p=dsi__ch___pcb_meantmp n=dsi__ch___pcb_mean r=1)
  `c(   name=cdsi__ch___flt p=dsi__ch___pcb_mean                         c=10`u rs=1`u)
  
enddefine

**---------

define dut_dsi_cable(__ch__=0)

  		*xcable_dsi__ch__ dsi__ch___bus dsi___tag___bus 0 0 gnd___tag__ vbat vsup___tag___bus dsi3_cable
  `r(name=rdsi__ch___cable p=dsi__ch___slave_conn n=dsi__ch___master_conn r=1`m)
  `r(name=rgnd__ch___cable p=gnd__ch___slave_conn                         r=1`m)

  *Aufschwingen bei Start, wenn nicht geerdet:
  *vconnect_gnd___tag__ 0 gnd___tag__ dc 0
  
enddefine

**---------

define dut_dsi_slave(__ch__=0)

  `r(name=rdsi__ch___slave p=dsi__ch___slave_pcb n=dsi__ch___slave_conn r=10)
  `c(name=cdsi__ch___slave p=dsi__ch___slave_pcb n=gnd__ch___slave_conn c=1.2`n rs=1)
  
  *c(name=cdsi__ch___slave_convergence p=dsi__ch___slave_pcb c=1`p rs=0)
    
enddefine

**---------

define dut_dsi(__ch__=0)

  `bond_au(name=rbond_dsi__ch__ o=dsi__ch___pcb i=dsi__ch___p)
  
  `dut_dsi_master(ch=__ch__)
  `dut_dsi_cable(ch=__ch__)
  `dut_dsi_slave(ch=__ch__)
  
enddefine

**---------

`dut_dsi(ch=0)
`dut_dsi(ch=1)

**------------------------------------------------
** SPI
**------------------------------------------------

`bond_au(name=rbond_csb  o=csb_pcb  i=csb_p)
`bond_au(name=rbond_sck  o=sck_pcb  i=sck_p)
`bond_au(name=rbond_mosi o=mosi_pcb i=mosi_p)
`bond_au(name=rbond_miso o=miso_pcb i=miso_p c=20`p)

**------------------------------------------------
** Command and Data Memory
**------------------------------------------------

`bond_au(name=rbond_resb o=resb_pcb i=resb_p)

**------------------------------------------------
** Interrupt System
**------------------------------------------------

`bond_au(name=rbond_intb o=intb_pcb i=intb_p)

**------------------------------------------------
** Timebase
**------------------------------------------------

`bond_au(name=rbond_clkref o=clkref_pcb i=clkref_p)

**---------

`if models[1]
  `conn(p=osc20m__df   n=xdut.xosc.xosc_20m_0.xosc20m_0.xring.df<1>)
  `conn(p=osc20m__inp  n=xdut.xosc.xosc_20m_0.xosc20m_0.inp)
  `conn(p=osc20m__inn  n=xdut.xosc.xosc_20m_0.xosc20m_0.inn)
  `conn(p=osc20m__gain n=xdut.xosc.xosc_20m_0.xosc20m_0.gain)
`endif

**------------------------------------------------
** Miscellaneous
**------------------------------------------------

`bond_au(name=rbond_dab   o=dab_pcb   i=dab_p)
`bond_au(name=rbond_bfwb  o=bfwb_pcb  i=bfwb_p)
`bond_au(name=rbond_syncb o=syncb_pcb i=syncb_p)
`bond_au(name=rbond_rfc   o=rfc_pcb   i=rfc_p)
`bond_au(name=rbond_aout  o=aout_pcb  i=aout_p)
`bond_au(name=rbond_tmode o=tmode_pcb i=tmode_p)

**---------

`dut(file=${IC_VER}.sp path=$SPSCR_PRJ/netlists subckt=$PARAM_TOPNAME sramfix=cored_ float=$PARAM_use_float)
`var(name=FloatingGateRailVal val=10`G)

**---------

`if "$SPSCR_MACROTYPE" eq "SEQ" || "$SPSCR_MACROTYPE" eq "SP"
.include "$SPSCR_PRJ/netlists/${IC_VER}_BA_Cadd.sp"
`endif

**---------

*c(name=cdigital p=xdut.vddd c=885675`f cp=0)

**------------------------------------------------
** Models
**------------------------------------------------

`include "$SPSCR_TB/tb/models.gpp"

**------------------------------------------------
** Convergence
**------------------------------------------------

**------------------------------------------------
**------------------------------------------------
